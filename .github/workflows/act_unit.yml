# To test with act: gh act --secret-file $ENV_FILE --workflows .github/workflows/act_unit.yml

name: Build

on:
  push:
    branches:
      - main
  pull_request:

env:
  PLANET_API_CREDENTIALS: ${{ secrets.PLANET_API_CREDENTIALS }}
  PLANET_API_KEY: ${{ secrets.PLANET_API_KEY }}
  EARTHENGINE_TOKEN: ${{ secrets.EARTHENGINE_SERVICE_ACCOUNT }}
  EARTHENGINE_SERVICE_ACCOUNT: ${{ secrets.EARTHENGINE_SERVICE_ACCOUNT }}
  EARTHENGINE_PROJECT: ${{ secrets.EARTHENGINE_PROJECT }}

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.8"
  #     - uses: pre-commit/action@v3.0.0

  #mypy:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v3
  #    - uses: actions/setup-python@v4
  #      with:
  #        python-version: "3.8"
  #    - name: Install nox
  #      run: pip install nox
  #    - name: run mypy checks
  #      run: nox -s mypy

  build:
    # needs: [lint]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]
        include:
          - os: macos-latest # macos test
            python-version: "3.8"
          - os: windows-latest # windows test
            python-version: "3.8"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install nox
        run: python -m pip install nox
      - name: test with pytest
        run: nox -s test -- tests/*
      - name: codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
      - name: assess dead fixtures
        if: matrix.python-version == '3.8'
        run: nox -s dead-fixtures

  # entry-point:
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.8"
  #     - name: Install nox
  #       run: python -m pip install nox
  #     - name: test the entrypoints
  #       run: nox -s bin

  # docs:
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.8"
  #     - name: Install nox
  #       run: python -m pip install nox
  #     - name: build the documentation and check for warnings
  #       run: nox -s docs

  # apps:
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.8"
  #     - name: Install dependencies
  #       run: python -m pip install .[test]
  #     - name: build the template panel application
  #       run: pytest --nbmake sepal_ui/templates/panel_app/ui.ipynb
  #     - name: build the template map application
  #       run: pytest --nbmake sepal_ui/templates/map_app/ui.ipynb
